trigger:
  batch: true
  include:
    - '*'

variables:
  buildConfiguration: Release

stages:
  - stage: Build
    displayName: ðŸš§
    pool:
      vmImage: ubuntu-18.04
    steps:
      - task: UseDotNet@2
        displayName: Install .NET Core 3.1 SDK
        inputs:
          version: 3.1.100
          packageType: sdk
      - task: DotNetCoreCLI@2
        displayName: Initialize .NET Core Environment
        inputs:
          command: help
      - task: DotNetCoreCLI@2
        displayName: Build Package
        inputs:
          command: build
          projects: src/FooLib/FooLib.csproj
          arguments: >
            --configuration $(buildConfiguration)
      - task: DotNetCoreCLI@2
        displayName: Pack Release Package
        inputs:
          command: pack
          projects: src/FooLib/FooLib.csproj
          packDirectory: $(Build.ArtifactStagingDirectory)/packages/release
          nobuild: true
          arguments: >
            --configuration $(buildConfiguration)
      - task: DotNetCoreCLI@2
        displayName: Pack CI Package
        inputs:
          command: pack
          projects: src/FooLib/FooLib.csproj
          packDirectory: $(Build.ArtifactStagingDirectory)/packages/ci
          nobuild: true
          arguments: >
            --configuration $(buildConfiguration)
            --version-suffix "ci.$(Build.BuildId)+git.commit.$(Build.SourceVersion)"
      - publish: $(Build.ArtifactStagingDirectory)/packages
        artifact: packages

  - stage: PublishArtifacts
    displayName: ðŸ“¤
    pool:
      vmImage: ubuntu-18.04
    steps:
      - checkout: none
      - download: current
        artifact: packages
      - task: NuGetCommand@2
        displayName: Publish CI Package to Azure Artifacts
        inputs:
          command: push
          publishVstsFeed: testrepo/FooLib
          packagesToPush: $(Pipeline.Workspace)/packages/ci/*.nupkg

  - stage: UnitTest
    displayName: ðŸ§ª
    condition: ne(variables['Build.SourceBranch'], 'refs/heads/master')
    jobs:
      - job: UnitTest
        displayName: Run Unit Tests
        strategy:
          matrix:
            Windows:
              VM_IMAGE: windows-2019
            Ubuntu:
              VM_IMAGE: ubuntu-18.04
            macOS:
              VM_IMAGE: macOS-10.14
        pool:
          vmImage: $(VM_IMAGE)
        steps:
          - task: UseDotNet@2
            displayName: Install .NET Core 3.1 SDK
            inputs:
              version: 3.1.100
              packageType: sdk
          - task: DotNetCoreCLI@2
            displayName: Initialize .NET Core Environment
            inputs:
              command: help
          - task: DotNetCoreCLI@2
            displayName: Execute Unit Tests
            inputs:
              command: test
              projects: test/FooLibTests/FooLibTests.csproj
              nobuild: true
              configuration: $(buildConfiguration)
              arguments: >
                --verbosity normal
                --configuration $(buildConfiguration)
              publishTestResults: true
              workingDirectory: $(Build.SourcesDirectory)

  - stage: Release
    displayName: ðŸš€
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
    jobs:
      - job: Release
        displayName: Publish Package to NuGet
        pool:
          vmImage: ubuntu-18.04
        steps:
          - checkout: none
          - download: packages
          - task: NuGetCommand@2
            displayName: Publish Package to NuGet
            inputs:
              command: push
              includeNugetOrg: true
              nuGetFeedType: external
              publishFeedCredentials: NuGet
              packagesToPush: $(Pipeline.Workspace)/packages/release/*.nupkg
