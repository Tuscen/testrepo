trigger:
  batch: true
  branches:
    include:
      - '*'

variables:
  buildConfiguration: Release

stages:
  - stage: Build
    displayName: ðŸš§
    jobs:
      - job: BuildOnWindows
        displayName: Build with .NET Core SDK on Windows
        pool:
          vmImage: windows-2019
        steps:
          - task: UseDotNet@2
            displayName: Install .NET Core 3.1 SDK
            inputs:
              version: 3.1.100
              packageType: sdk
          - script: dotnet help
            displayName: Initialize .NET Core Environment
          - task: DotNetCoreCLI@2
            displayName: Build Package
            inputs:
              command: build
              configuration: $(buildConfiguration)
              projects: src/FooLib/FooLib.csproj
          - script: >
              dotnet pack
              --no-build
              --output $(Build.ArtifactStagingDirectory)/packages/release
              --configuration $(buildConfiguration)
              src/FooLib/FooLib.csproj
            displayName: Pack Release Package
          - script: >
              dotnet pack
              --no-build
              --output $(Build.ArtifactStagingDirectory)/packages/ci
              --configuration $(buildConfiguration)
              --version-suffix "ci.$(Build.BuildId)+git.commit.$(Build.SourceVersion)"
              src/FooLib/FooLib.csproj
            displayName: Pack CI Package
          - publish: $(Build.ArtifactStagingDirectory)/packages
            artifact: packages

  - stage: PublishArtifacts
    dependsOn: Build
    displayName: ðŸ“¤
    condition: succeeded()
    jobs:
      - job: PublishArtifacts
        displayName: Publish Artifacts
        pool:
          vmImage: windows-2019
        steps:
          - checkout: none
          - download: current
            artifact: packages
            patterns: '*/**/*.nupkg'
          - task: NuGetCommand@2
            displayName: Publish CI Package to Azure Artifacts
            inputs:
              command: push
              publishVstsFeed: testrepo/FooLib
              packagesToPush: '$(Pipeline.Workspace)/packages/ci/*.nupkg'
              allowPackageConflicts: true

  - stage: UnitTest
    dependsOn: PublishArtifacts
    displayName: ðŸ§ª
    condition: and(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/master'))
    jobs:
      - job: UnitTest
        displayName: Run Unit Tests
        strategy:
          matrix:
            Windows:
              VM_IMAGE: windows-2019
            Ubuntu:
              VM_IMAGE: ubuntu-18.04
            macOS:
              VM_IMAGE: macOS-10.14
        pool:
          vmImage: $(VM_IMAGE)
        steps:
          - task: UseDotNet@2
            displayName: Install .NET Core 3.1 SDK
            inputs:
              version: 3.1.100
              packageType: sdk
          - script: dotnet help
            displayName: Initialize .NET Core Environment
          - task: DotNetCoreCLI@2
            displayName: Execute Unit Tests
            inputs:
              command: test
              projects: test/FooLibTests/FooLibTests.csproj
              configuration: $(buildConfiguration)
              arguments: >
                --verbosity normal
              publishTestResults: true
              workingDirectory: $(Build.SourcesDirectory)

  - stage: Release
    displayName: ðŸš€
    dependsOn: UnitTest
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    jobs:
      - job: Release
        displayName: Publish Package to NuGet
        pool:
          vmImage: windows-2019
        steps:
          - checkout: none
          - download: packages
            patterns: '*/**/*.nupkg'
          - task: NuGetCommand@2
            displayName: Publish Package to NuGet
            inputs:
              command: push
              includeNugetOrg: true
              nuGetFeedType: external
              publishFeedCredentials: NuGet
              packagesToPush: '$(Pipeline.Workspace)/packages/release/*.nupkg'
              allowPackageConflicts: true
